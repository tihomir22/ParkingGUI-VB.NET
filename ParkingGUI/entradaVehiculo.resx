<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <metadata name="ToolTip1.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>17, 17</value>
  </metadata>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="PictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>